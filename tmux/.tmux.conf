set -g status-left "#{pane_current_path}"
# set mouse control
set -g mouse on

#Set vi selection mode
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -t vi-copy y copy-pipe "xclip -sel clip -i"

#rebind prefix to C-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

#look good
#set -g default-terminal "screen-256color"

# better pane splitting
bind - split-window -v
bind C-j split-window -v

bind | split-window -h
bind C-l split-window -h


# color status bar
set -g status-bg colour235
set -g status-fg white

# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits


# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# this will renumber windows automatically when one gets deleted
set-option -g renumber-windows on
setw -g mode-keys vi
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

#colors
#set color of active pane
set -g pane-border-fg black
set -g status-left-length 10
set -g status-left ""
set -g status-right ""
set -g status-interval 60
set -g status-justify left
setw -g monitor-activity off
set -g visual-activity off
